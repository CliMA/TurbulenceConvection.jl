env:
  JULIA_VERSION: "1.7.0"
  OPENMPI_VERSION: "4.0.4"
  CUDA_VERSION: "11.2"
  OPENBLAS_NUM_THREADS: 1
  CLIMATEMACHINE_SETTINGS_FIX_RNG_SEED: "true"
  BUILDKITE_COMMIT: "${BUILDKITE_COMMIT}"
  BUILDKITE_BRANCH: "${BUILDKITE_BRANCH}"
  JULIA_DEPOT_PATH: "${BUILDKITE_BUILD_PATH}/${BUILDKITE_PIPELINE_SLUG}/depot/cpu"

steps:
  - label: "init environment :computer:"
    key: "init_cpu_env"
    command:
      - "echo $$JULIA_DEPOT_PATH"
      - "julia --project=test -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=test -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=test -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=test -e 'using Pkg; Pkg.status()'"

      - "julia --project=perf -e 'using Pkg; Pkg.develop(path = \".\")'"
      - "julia --project=perf -e 'using Pkg; Pkg.instantiate(;verbose=true)'"
      - "julia --project=perf -e 'using Pkg; Pkg.precompile()'"
      - "julia --project=perf -e 'using Pkg; Pkg.status()'"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - wait

  - label: ":partly_sunny: Bomex"
    key: "cpu_bomex"
    command:
      - "julia --color=yes --project=test integration_tests/Bomex.jl"
    artifact_paths:
      - "Output.Bomex.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: life_cycle_Tan2018"
    key: "cpu_life_cycle_tan2018"
    command:
      - "julia --color=yes --project=test integration_tests/life_cycle_Tan2018.jl"
    artifact_paths:
      - "Output.life_cycle_Tan2018.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: Soares"
    key: "cpu_soares"
    command:
      - "julia --color=yes --project=test integration_tests/Soares.jl"
    artifact_paths:
      - "Output.Soares.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: Rico"
    key: "cpu_rico"
    command:
      - "julia --color=yes --project=test integration_tests/Rico.jl"
    artifact_paths:
      - "Output.Rico.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: MWE Rico"
    key: "cpu_rico"
    command:
      - "julia --color=yes --project=test integration_tests/mwe_Rico.jl"
    artifact_paths:
      - "Output.mwe_Rico.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: Nieuwstadt"
    key: "cpu_nieuwstadt"
    command:
      - "julia --color=yes --project=test integration_tests/Nieuwstadt.jl"
    artifact_paths:
      - "Output.Nieuwstadt.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":scissors: TRMM_LBA"
    key: "cpu_trmm_lba"
    command:
      - "julia --color=yes --project=test integration_tests/TRMM_LBA.jl"
    artifact_paths:
      - "Output.TRMM_LBA.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: ARM_SGP"
    key: "cpu_arm_sgp"
    command:
      - "julia --color=yes --project=test integration_tests/ARM_SGP.jl"
    artifact_paths:
      - "Output.ARM_SGP.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  # Takes a bit too long...
  # - label: ":partly_sunny: GATE_III"
  #   key: "cpu_gate_iii"
  #   command:
  #     - "julia --color=yes --project=test integration_tests/GATE_III.jl"
  #   artifact_paths:
  #     - "Output.GATE_III.01/stats/comparison/*"
  #   agents:
  #     config: cpu
  #     queue: central
  #     slurm_ntasks: 1

  - label: ":partly_sunny: DYCOMS_RF01"
    key: "cpu_dycoms_rf01"
    command:
      - "julia --color=yes --project=test integration_tests/DYCOMS_RF01.jl"
    artifact_paths:
      - "Output.DYCOMS_RF01.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: DYCOMS_RF02"
    key: "cpu_dycoms_rf02"
    command:
      - "julia --color=yes --project=test integration_tests/DYCOMS_RF02.jl"
    artifact_paths:
      - "Output.DYCOMS_RF02.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: GABLS"
    key: "cpu_gabls"
    command:
      - "julia --color=yes --project=test integration_tests/GABLS.jl"
    artifact_paths:
      - "Output.GABLS.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":thought_balloon: DryBubble"
    key: "cpu_drybubble"
    command:
      - "julia --color=yes --project=test integration_tests/DryBubble.jl"
    artifact_paths:
      - "Output.DryBubble.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":partly_sunny: LES_driven_SCM"
    key: "cpu_lesdrivenscm"
    command:
      - "julia --color=yes --project=test integration_tests/LES_driven_SCM.jl"
    artifact_paths:
      - "Output.LES_driven_SCM.01/stats/comparison/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":rocket: Allocations analysis"
    key: "cpu_allocations"
    command:
      - "julia --color=yes --project=perf perf/allocs.jl"
    artifact_paths:
      - "perf/allocations_output/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":rocket: Allocations analysis (exhaustive)"
    key: "cpu_allocations_exhaustive"
    command:
      - "julia --color=yes --project=perf perf/allocs.jl exhaustive=true"
    artifact_paths:
      - "perf/allocations_output_exhaustive/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":rocket: Benchmark tendencies"
    key: "cpu_bm_tendencies"
    command:
      - "julia --color=yes --project=perf perf/benchmark.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":rocket: Benchmark step!"
    key: "cpu_bm_step"
    command:
      - "julia --color=yes --project=perf perf/benchmark_step.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":scales: Measure precompilation speedup (all)"
    key: "cpu_precompilable"
    command:
      - "julia --color=yes --project=perf perf/precompilable.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":scales: Measure precompilation speedup (no init)"
    key: "cpu_precompilable_no_init"
    command:
      - "julia --color=yes --project=perf perf/precompilable_no_init.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":scales: Measure precompilation speedup (no io)"
    key: "cpu_precompilable_no_io"
    command:
      - "julia --color=yes --project=perf perf/precompilable_no_io.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":scales: Measure precompilation speedup (no init, no io)"
    key: "cpu_precompilable_no_init_io"
    command:
      - "julia --color=yes --project=perf perf/precompilable_no_init_io.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":mag: Invalidations"
    key: "cpu_invalidations"
    command:
      - "julia --color=yes --project=perf perf/invalidations.jl"
    artifact_paths:
      - "perf/invalidations_output/*"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - label: ":mag: Inference triggers"
    key: "cpu_inf_trigs"
    command:
      - "julia --color=yes --project=perf perf/inference_triggers.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - wait: ~
    continue_on_failure: true

  - label: ":robot_face: Print new mse tables"
    key: "cpu_print_new_mse"
    command:
      - "julia --color=yes --project=test utils/print_new_mse.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1

  - wait

  - label: ":robot_face: Move main results"
    key: "cpu_mv_main_res"
    command:
      - "julia --color=yes --project=test utils/move_output.jl"
    agents:
      config: cpu
      queue: central
      slurm_ntasks: 1
