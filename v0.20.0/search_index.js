var documenterSearchIndex = {"docs":
[{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"","category":"page"},{"location":"dev/#Developer-docs","page":"Developer docs","title":"Developer docs","text":"","category":"section"},{"location":"dev/","page":"Developer docs","title":"Developer docs","text":"This page provides miscellaneous developer documentation","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"newcommandparamT1       text1\nnewcommandhyperparamT1text1\nnewcommandsimparamT1  text1\n\nnewcommandexp1mathrmexpleft(1right)\nnewcommandatan1mathrmatanleft(1right)\nnewcommandsign1mathrmsignleft(1right)\nnewcommanderf1mathrmerfleft(1right)\nnewcommanderfinv1mathrmerfinvleft(1right)\n\nnewcommandparam1     1\nnewcommandhyperparam11\nnewcommandsimparam1  1\n\nnewcommandCROSStimes\nnewcommandGRADnabla\nnewcommandDOTbullet\nnewcommandPDpartial\nnewcommandPDFzfracPDPD z\nnewcommandDM1langle 1 rangle\nnewcommandiEnve\nnewcommandSD2overline1_2\nnewcommandSDi1SD1i\nnewcommandSDj1SD1j\nnewcommandSDe1SD1iEnv\nnewcommandSDiog21_2\nnewcommandSDio1SDiog1i\nnewcommandSDjo1SDiog1j\nnewcommandSDeo1SDiog1iEnv\nnewcommandaSD21_2\nnewcommandaSDi1aSD1i\nnewcommandaSDj1aSD1j\nnewcommandaSDe1aSD1iEnv\nnewcommandotherDefswhere additional variable definitions are in\n\nnewcommandIntraCVSDi2overline1_i      2_i      \nnewcommandIntraCVSDj2overline1_j      2_j      \nnewcommandIntraCVSDe2overline1_iEnv2_iEnv\n\nnewcommandInterCVSDi2overline1_i      overline2_i      \nnewcommandInterCVSDj2overline1_j      overline2_j      \nnewcommandInterCVSDe2overline1_iEnvoverline2_iEnv\n\nnewcommandTCV2langle 1^*2^* rangle\n\nnewcommandBC11_z_min\nnewcommandBCT11_z_max\nnewcommandBCB11_z_min\nnewcommandBCG11_z_boundary\n\nnewcommandKmK^m\nnewcommandKhK^h\nnewcommandTEquilibT_mathrmiterated\nnewcommandPhasePartitionq\nnewcommandExnerDPi_dry\nnewcommandExnerMPi_moist\nnewcommandWindSpeedu\nnewcommandLayerThicknessparamDelta z\nnewcommandSurfaceRoughness1paramz_01\nnewcommandSensibleSurfaceHeatFluxF_mathrmsensible\nnewcommandLatentSurfaceHeatFluxF_mathrmlatent\nnewcommandFrictionVelocityu_*\nnewcommandBuoyancyb\nnewcommandBuoyancyGradPD_z Buoyancy\nnewcommandBuoyancyFluxIntraCVSDiwb\nnewcommandTemperatureScaletheta_*\nnewcommandSurfaceMomentumFluxBCoverlinewu\nnewcommandSurfaceHeatFluxBCoverlinewtheta\nnewcommandSurfaceBuoyancyFluxBCIntraCVSDiwtheta\nnewcommandConvectiveVelocityw_*  Convective velocity near the surface\nnewcommandInversionHeightz_*\nnewcommandMOLenLambda_M-O\nnewcommandzLLparamz_  z at the first surface level (we should make this grid-independent)\n\nnewcommandqtq_mathrmtot\nnewcommandqrq_mathrmrain\nnewcommandqlq_mathrmliq\nnewcommandqiq_mathrmice\nnewcommandqvq_mathrmvap\nnewcommandqvsatq_mathrmvap^*\nnewcommandpvsatp_mathrmvap^*\nnewcommandqcq_mathrmcon\nnewcommandThetaVaptheta_mathrmvap\nnewcommandThetaVirttheta_mathrmvirt\nnewcommandThetaRhotheta_rho\nnewcommandThetaLiqtheta_mathrmliq\nnewcommandThetaLiqIcetheta_mathrmliq-ice\nnewcommandThetaLiqIceSattheta^*_mathrmliq-ice\nnewcommandThetaDrytheta_mathrmdry\nnewcommandTDryT_dry\nnewcommandeinte_mathrmint\nnewcommandetote_mathrmtot\n\nnewcommandTRefT_0\nnewcommandalphaRefalpha_0\nnewcommandrhoRefrho_0\nnewcommandpRefp_0\nnewcommandHeavisidemathcal H\n\nnewcommandalphaLLalphaRef_zLL\nnewcommanduHsimparammathbfu_h\n\nnewcommandCoriolisParamhyperparammathrmcoriolis_param\nnewcommandSubsidenceParamhyperparammathrmsubsidence\nnewcommandbetaMhyperparambeta_m\nnewcommandbetaHhyperparambeta_h\nnewcommandgammaMhyperparamgamma_m\nnewcommandgammaHhyperparamgamma_h\n\nnewcommandPTildeparamtildep\nnewcommandVKConstparamkappa_mathrmVon-Karman\nnewcommandNsdhyperparamN_sd\nnewcommandgravparamg\nnewcommandTZeroparamT_0\nnewcommandRefHintVparameint_v0\nnewcommandRefHintIparameint_i0\n\nnewcommandEpsDVparamvarepsilon_dv\nnewcommandEpsVDparamvarepsilon_vd\nnewcommandRmR_m\nnewcommandCpmc_pm\nnewcommandCvmc_vm\nnewcommandRdparamR_d\nnewcommandRvparamR_v\nnewcommandCp1paramc_p1\nnewcommandCv1paramc_v1\nnewcommandCvdCvd\nnewcommandCvvCvv\nnewcommandCvlCvl\nnewcommandCviCvi\n\nnewcommandDeltaCpparamDelta c_p\nnewcommandTTripleparamT_mathrmtr\nnewcommandPTripleparamp_mathrmtr\nnewcommandTFreezeparamT_mathrmfreeze\n\nnewcommandRefLHvparamL_v0\nnewcommandRefLHsparamL_s0\nnewcommandRefLHfparamL_f0\nnewcommandLatentHeatV1L_vap(1)\nnewcommandLatentHeatS1L_sub(1)\nnewcommandLatentHeatF1L_fus(1)","category":"page"},{"location":"EDMFEquations/#Eddy-Diffusivity-Mass-Flux-(EDMF)-parameterization","page":"EDMF equations","title":"Eddy-Diffusivity Mass-Flux (EDMF) parameterization","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"This document describes the Eddy-Diffusivity Mass-Flux (EDMF) parameterization for subgrid-scale (SGS) turbulence and convection. The model equations and rationale are based on: Tan et al. (2018); Cohen et al. (2020); Lopez-Gomez et al. (2020). The key predictands of the EDMF parameterization are the SGS vertical fluxes of heat, moisture and momentum, and the cloud fraction in the host model grid. The EDMF parameterization divides the host model's grid into N ge 2 subdomains that represent an isotropic turbulent enviroment and coherent updraft(s) and or downdraft(s). The parameterization solves prognostic equations for first and second moments in the subdomains to provide both the abovementioned SGS vertical fluxes and cloud fraction in the host model grid.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"In this document, color-coding is used to indicate:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"paramTConstant parameters that are fixed in space and time (eg those defined in CLIMAParametersjl)\nsimparamTSingle column (SC) inputs (eg variables that are fed into the SC model from the dynamical core (eg horizontal velocity))\nhyperparamTTunable hyper-parameters that will need to be changeable but will only include single numbers (eg Float64)","category":"page"},{"location":"EDMFEquations/#Subdomain-decomposition","page":"EDMF equations","title":"Subdomain decomposition","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The EDMF is 1D model in z that solves for the statistical distribution in the grid box of the host model. As such in the EDMF there is no spatial discretization in the horizontal directions (x and y), the horizontal space is broken into Nsd (sim 1-5) \"subdomains\" (SDs), denoted by subscript i, where 1 le i le Nsd. One of the subdomains, the \"environment\", is treated different compared to others, termed \"updrafts\" (and or \"downdrafts\"). This environment subdomain is denoted with a special index iEnv (which we usually set to 0). For dummy variables phi and psi, we use several domain and SD representations of interest:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\n  SDiphi                                                                                   quad  texthorizontal mean of variable phi over subdomain i \n  SDiphi = phi_i - SDiphi                                                            quad  textfluctuations of phi about the subdomain mean \n  IntraCVSDiphipsi                                                                      quad  textintra subdomain covariance \n  DMphi = sum_i aSDia SDiphi                                                       quad  texthorizontal mean of phi over the total domain \n  SDiphi^* = SDiphi - DMphi                                                        quad  textdifference between subdomain  domain means \n  InterCVSDiphipsi                                                                      quad  textinter subdomain covariance among subdomain means \n  phi^* = phi - DMphi                                                                    quad  textdifference between subdomain  domain means \n  TCVphipsi = sum_forall i a_i IntraCVSDiphipsi +\n  sum_forall i sum_forall j  aSDia aSDja SDiphi(SDipsi - SDjpsi)     quad  texttotal covariance\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, SDiphi and SDipsi are a dummy variables for the following 7 unknowns:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\n  SDiw                    quad textvertical velocity \n  SDieint                quad textinternal energy  \n  SDiqt                  quad texttotal water specific humidity  \n  SDiTKE                  quad textturbulent kinetic energy (05(IntraCVSDiuu+IntraCVSDivv+IntraCVSDiww))  \n  IntraCVSDieinteint  quad textintra subdomain covariance of eint and eint  \n  IntraCVSDiqtqt      quad textintra subdomain covariance of qt and qt \n  IntraCVSDieintqt    quad textintra subdomain covariance of eint and qt\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"From the large-scale model perspective, DMphi represents the resolved grid mean, and TCVphipsi represents the SGS fluxes and (co)-variances of scalars that need to be parameterized. Equations in the following sections, \\eqref{eq:AreaFracGov}, \\eqref{eq:1stMoment} and \\eqref{eq:2ndMoment}, are solved on z_min le z le z_max and t ge 0. There are 8 Nsd equations in total.","category":"page"},{"location":"EDMFEquations/#Domain-averaged-equations","page":"EDMF equations","title":"Domain averaged equations","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The EDMF model can be used in the context of a stand-alone single column, or integrated with a dynamical core. Either way, the EDMF model relies on grid mean variables, which may be prescribed or solved for. Taking an area fraction-weighted average of the subdomain equations yields the domain-averaged equations (which should be consistent with variables in the dynamical core).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The domain-averaged equations for DMphi in w qt eint uH are:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nPD_t (rhoRef DMphi)\n+ PD_z (rhoRef DMw DMphi)\n+ nabla_h DOT left( rhoRef DMphi otimes DMphi right)\n= \n  DMS_textdiff^DMphi\n+ DMS_textpress\n+ DMS_textcoriolis\n+ DMS_textsubsidence\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nDMS_textdiff^DMphi  = PD_z (rhoRef aSDea SDeKm PD_z DMphi)   labeleqgm_diffusion \nDMS_textdiff^w          = PD_z (rhoRef aSDea SDeKm PD_z DMw)      labeleqgm_diffusion_w \nDMS_textpress             = - GRAD_h DMp                                       labeleqgm_pressure \nDMS_textcoriolis          = CoriolisParam DMphi CROSS mathbfk             labeleqgm_coriolis \nDMS_textsubsidence        = - SubsidenceParam GRAD phi                          labeleqgm_subsidence \nendalign","category":"page"},{"location":"EDMFEquations/#Sub-domain-equations:-Area-fraction","page":"EDMF equations","title":"Sub-domain equations: Area fraction","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The EDMF equations take the form of advection-diffusion equations. The subdomain area fraction is given by the mass continuity equation in the ith subdomain (aSDia):","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"begingather\n  PD_t (rhoRef aSDia)\n  + PD_z (rhoRef aSDia SDiw)\n  + GRAD_h DOT\n  (rhoRef aSDia DMuH)\n  =\n  SDiS^a\n   quad i ne iEnv labeleqAreaFracGov \n  aSDia = 1 - sum_jneiEnv aSDja quad i = iEnv labeleqAreaFracConserve \n  qquad 0  aSDia  1 labeleqAreaFracConstraint\nendgather","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, rhoRef SDiw uH is fluid density, mean vertical velocity along z, and domain-mean of the horizontal velocity respectively. The area fraction constraints are necessary to ensure the system of equations is well-posed. All source terms (SDiS^a) will be discussed in later sections.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"note: Note\nThe greater than zero constraint must be satisfied at every step of the solution process, since it is necessary to avoid division by zero in the mean field equations.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS^a = SDiS_epsilondelta^a\nendalign","category":"page"},{"location":"EDMFEquations/#Source-term-definitions","page":"EDMF equations","title":"Source term definitions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"We note that the net exchange is zero sum_i SDiS_epsilondelta^a = 0. Therefore, we may define the environment source term as the negative sum of all updraft source terms. The entrainment-detrainment source is:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS_epsilondelta^a =\nbegincases\n  rho a_i SDiw left( -delta_i + epsilon_i right)  i ne iEnv \n  0 - sum_j ne iEnv SDjS_epsilondelta^a  i = iEnv \nendcases\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nEntrainment-Detrainment (epsilon_i) and (delta_i).","category":"page"},{"location":"EDMFEquations/#Sub-domain-equations:-1st-moment","page":"EDMF equations","title":"Sub-domain equations: 1st moment","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The 1st moment sub-domain equations are:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleq1stMoment\n  PD_t (rhoRef aSDia SDiphi)\n  + PD_z (rhoRef aSDia SDiw SDiphi)\n  + GRAD_h DOT\n  (rhoRef aSDia DMuH SDiphi)\n  =\n  SDiS^phi\n   quad forall i \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, SDiS^phi are source terms, including diffusion, and many other sub-grid-scale (SGS) physics. In general, SDiS^phi and SDiS^a may depend on SDjphi and or aSDja for any j.","category":"page"},{"location":"EDMFEquations/#Source-terms-per-equation","page":"EDMF equations","title":"Source terms per equation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The source terms common to all unknowns are:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS^phi =\n  SDiS_epsilondelta^phi\n+ SDiS_textturb-transp^phi quad forall phi\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Additional source terms exist in other equations:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS^w =\n  SDiS_epsilondelta^w\n+ SDiS_textturb-transp^w\n+ SDiS_textbuoy\n+ SDiS_textnh-press\n+ SDiS_textcoriolis \nSDiS^eint =\n  SDiS_epsilondelta^eint\n+ SDiS_textturb-transp^eint\n+ SDiS_textMP-MSS^eint\n+ SDiS_textrad \nSDiS^qt =\n  SDiS_epsilondelta^qt\n+ SDiS_textturb-transp^qt\n+ SDiS_textMP-MSS^qt\nendalign","category":"page"},{"location":"EDMFEquations/#Source-term-definitions-2","page":"EDMF equations","title":"Source term definitions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Note: The sum of the total pressure and gravity are recast into the sum of the non-hydrostatic pressure and buoyancy sources.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS_epsilondelta^phi =\nbegincases\n  rhoRef a_i SDiw left( -delta_i SDiphi + epsilon_i SDephi right)  i ne iEnv \n  0 - sum_j ne iEnv SDjS_epsilondelta^phi  i=iEnv \nendcases \nSDiS_textturb-transp^phi  =  -PD_z (rhoRef a_i IntraCVSDiwphi) \n  = PD_z (rhoRef a_i SDiKm PD_z SDiphi) \nSDiS_textnh-press = -rhoRef aSDia left( alpha_b SDib  + alpha_d frac(SDiw - SDew)  SDiw - SDew  r_d aSDia^12 right) \nalpha_b = 13 quad alpha_d = 0375 quad r_d      = 500 m \nSDiS_textbuoy = rhoRef aSDia SDib \nSDiS_textcoriolis  = f(SDimathbfu - SDimathbfu_textgeo-wind) \nSDiS_textrad  = left( PD_t SDieint right)_radiation \nSDiS_textMP-MSS^qt  = \nSDiS_textMP-MSS^eint  = \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nEntrainment-Detrainment (epsilon_i) and (delta_i).\nBuoyancy (Buoyancy).\nEddy diffusivity (Km Kh).","category":"page"},{"location":"EDMFEquations/#Sub-domain-equations:-2nd-moment","page":"EDMF equations","title":"Sub-domain equations: 2nd moment","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The 2nd moment sub-domain equations are of the exact same form as the 1st moment equations (equation \\eqref{eq:1stMoment}):","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleq2ndMoment\n  PD_t (rhoRef aSDia SDiphi)\n  + PD_z (rhoRef aSDia SDiw SDiphi)\n  + GRAD_h DOT\n  (rhoRef aSDia DMuH SDiphi)\n  =\n  SDiS^phi\n   quad forall i \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, SDiS^phi are source terms, including diffusion, and many other sub-grid-scale (SGS) physics. In general, SDiS^phi and SDiS^a may depend on SDjphi and or aSDja for any j.","category":"page"},{"location":"EDMFEquations/#Source-terms-per-equation-2","page":"EDMF equations","title":"Source terms per equation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The source terms common to all unknowns are:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS^phipsi =\n  SDiS_epsilondelta^phipsi\n+ SDiS_textx-grad flux^phipsi\n+ SDiS_textturb-transp^phipsi\nquad forall phi psi\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Additional source terms exist in other equations:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS^TKE =\n  SDiS_epsilondelta^TKE\n+ SDiS_textx-grad flux^TKE\n+ SDiS_textturb-transp^TKE\n+ SDiS_textdissip\n+ SDiS_textpress\n+ SDiS_textbuoyancy \nSDiS^phipsi =\n  SDiS_epsilondelta^phipsi\n+ SDiS_textx-grad flux^phipsi\n+ SDiS_textturb-transp^phipsi\n+ SDiS_textdissip^phipsi\n+ SDiS_textMP-MSS^phipsi\nquad phipsi in qtqt einteint eint qt\nendalign","category":"page"},{"location":"EDMFEquations/#Source-term-definitions-3","page":"EDMF equations","title":"Source term definitions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nSDiS_epsilondelta^phipsi =\nbegincases\n  rhoRef a_i SDiw left -delta_i IntraCVSDiphipsi + epsilon_i\nleft(\nIntraCVSDephipsi + (SDephi - SDiphi)(SDepsi - SDipsi)\nright) right  i ne iEnv \n  0 - sum_jne iEnv SDjS_epsilondelta^phipsi  i=iEnv \nendcases \nSDiS_epsilondelta^TKE =\nbegincases\n  rhoRef a_i SDiw left -delta_i SDiTKE + epsilon_i\nleft(\nSDeTKE + frac12 (SDew - SDiw)^2\nright) right  i ne iEnv \n  0 - sum_jne iEnv SDjS_epsilondelta^TKE  i=iEnv \nendcases \nSDiS_textx-grad flux^phipsi\n =\n- rhoRef a_i IntraCVSDiwpsi PD_z SDiphi\n- rhoRef a_i IntraCVSDiwphi PD_z SDipsi \n =\n 2 rhoRef a_i SDiKh PD_z SDipsi PD_z SDiphi \nSDiS_textx-grad flux^TKE\n =\nrhoRef a_i SDiKm left left(PD_zDMuright)^2 + left(PD_zDMvright)^2 + left(PD_zDMwright)^2 right \nSDiS_textturb-transp^phipsi  = - PD_z (rhoRef a_i overlinew_iphi_ipsi_i) \n = PD_z (rhoRef a_i SDiKh PD_z IntraCVSDiphipsi) \nSDiS_textturb-transp^TKE  = PD_z (rhoRef a_i SDiKm PD_z SDiTKE) \nSDiS_textdissip\n = - rhoRef a_i c_e IntraCVSDiphipsi fracSDiTKE^12SDiol_mix quad textEquation 38 in Tan et al \nc_e  = 2 \nSDiS_textpress\n = - aSDia left IntraCVSDiu(partial_x p^dagger) +\n                      IntraCVSDiv(partial_y p^dagger) +\n                      IntraCVSDiw(partial_z p^dagger)right  \n = 0 qquad textfor now need to derive correct formulation \nSDiS_textbuoyancy^TKE  = rhoRef aSDia BuoyancyFlux \nSDiS_textMP-MSSP^qtqt\n = \nSDiS_textMP-MSSP^einteint\n = \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nEntrainment-Detrainment (epsilon_i) and (delta_i).\nEddy diffusivity (Km Kh).\nMixing length (l_mix).\nBuoyancy flux (BuoyancyFlux).","category":"page"},{"location":"EDMFEquations/#EDMF-variable-definitions","page":"EDMF equations","title":"EDMF variable definitions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"The following definitions are ordered in a dependency fashion; all variables are defined from variables already defined in previous subsections.","category":"page"},{"location":"EDMFEquations/#Constants","page":"EDMF equations","title":"Constants","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nc_K  = 01 \ntexttol_InversionHeightmathrm-stable  = 001 \nendalign","category":"page"},{"location":"EDMFEquations/#Phase-partition","page":"EDMF equations","title":"Phase partition","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nPhasePartition = qv ql qi \nqv = qt - ql - qi \npvsat(T) = PTriple left( fracTTTriple right)^fracDeltaCpRv expfracRefLHv - DeltaCp TZeroRv left( frac1TTriple - frac1T right) labeleqpvsat \nqvsat(T rho) = fracpvsat(T)rho Rv T                                                                                                                            labeleqqvsat \nqc = max(qt - qvsat 0)                                                                                                                                               labeleqqc \nql = lambda qc                                                                                                                                                         labeleqql \nqi = (1-lambda) qc                                                                                                                                                     labeleqqi \nlambda(T) = Heaviside(T-TFreeze)                                                                                                                                       labeleqlambda \nHeaviside = textHeaviside function \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Functionally,","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nPhasePartition  = PhasePartition(qt T rho) \nqvsat  = qvsat(T rho) \nendalign","category":"page"},{"location":"EDMFEquations/#Gas-constants","page":"EDMF equations","title":"Gas constants","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nEpsDV  = fracRvRd approx 161 \nEpsVD  = fracRdRv approx 062 \nRm  = Rd left1 + (EpsDV-1) qt - EpsDV (ql+qi) right \nendalign","category":"page"},{"location":"EDMFEquations/#Specific-heats","page":"EDMF equations","title":"Specific heats","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nCvm = (1 - SDiqt) Cvd + SDiqv Cvv + SDiql Cvl + SDiqi Cvi \nCpm = (1 - SDiqt) Cpd + SDiqt Cpv \nendalign","category":"page"},{"location":"EDMFEquations/#Latent-heat","page":"EDMF equations","title":"Latent heat","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nLatentHeatVT = RefLHv + (Cpv - Cpl) (T - TTriple) \nLatentHeatST = RefLHs + (Cpv - Cpi) (T - TTriple) \nLatentHeatFT = RefLHf + (Cpl - Cpi) (T - TTriple) \nendalign","category":"page"},{"location":"EDMFEquations/#Exner-functions","page":"EDMF equations","title":"Exner functions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nExnerD(pRef)    = left(fracpRefPTilde right)^RdCpd \nExnerM(pRef PhasePartition) = left(fracpRefPTilde right)^RmCpm \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Specific heats Cpm and Cvm.\nGas constants (Rm).\nPhase partition PhasePartition qt qv ql qi qvsat.","category":"page"},{"location":"EDMFEquations/#Temperature","page":"EDMF equations","title":"Temperature","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Note that, while temperature may be computed using different thermodynamic formulations, ThermodynamicState's are immediately converted to the (qt eint rhoRef)-formulation.","category":"page"},{"location":"EDMFEquations/#Dry-temperature","page":"EDMF equations","title":"Dry temperature","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nTDry  = ThetaLiqIce ExnerD \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Exner functions ExnerD and ExnerM.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Functionally,","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nTDry  = TDry(ThetaLiqIce pRef) \nendalign","category":"page"},{"location":"EDMFEquations/#(\\qt,-\\eint,-\\rhoRef{})-formulation","page":"EDMF equations","title":"(qt eint rhoRef)-formulation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, T conditionally satisfies the non-linear set of equations, which can be solved using a standard root solver (e.g., Secant method):","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nT =\nbegincases\nmathrmsatisfies  eint(T) = Cvm (T - TZero)  + qv RefHintV - qi RefHintI  qt  qvsat(T rhoRef) \n TZero + fraceint(T)(1-qt)Cvd + qt Cvv + qt RefHintV  textotherwise \nendcases\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Phase partition PhasePartition qt qv ql qi qvsat.\nSpecific heats Cpm and Cvm.\nReference state profiles (pRef, rhoRef, and alphaRef).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Functionally,","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nT  = T(qt eint rhoRef) \nendalign","category":"page"},{"location":"EDMFEquations/#(\\qt,-\\ThetaLiqIce,-\\rhoRef,-\\pRef)-formulation","page":"EDMF equations","title":"(qt ThetaLiqIce rhoRef pRef)-formulation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, T conditionally satisfies the non-linear set of equations, which can be solved using a standard root solver (e.g., Secant method):","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nT =\nbegincases\nmathrmsatisfies  ThetaLiqIce ExnerM = T left(1 - frac RefLHv ql + RefLHs qiCpm T right)  qt  qvsat(T rhoRef) \n TDry  textotherwise \nendcases\nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Dry temperature TDry.\nPhase partition PhasePartition qt qv ql qi qvsat.\nSpecific heats Cpm and Cvm.\nExner functions ExnerD and ExnerM.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Functionally,","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nT  = T(qt ThetaLiqIce rhoRef pRef) \nendalign","category":"page"},{"location":"EDMFEquations/#Reference-state-profiles","page":"EDMF equations","title":"Reference state profiles","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Using the hydrostatic balance, PD_z pRef = - rhoRef grav, and the ideal gas law, pRef = rhoRef Rm TRef, the reference state profiles are computed as:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nPD_z pRef  = - grav fracpRefTRef Rm \nint_BCpRef^pRef fracTDry(BCDMThetaLiqIce pRef)pRef PD pRef  = - fracgravBCDMRm int_z_min^z PD z \nrhoRef(pRef)  = fracpRefTDry(BCDMThetaLiqIce pRef) BCDMRm \nalphaRef  = frac1rhoRef(pRef) \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Temperature (T and TDry).\nGas constants (Rm).\nSpecific heats Cpm and Cvm.","category":"page"},{"location":"EDMFEquations/#Mixing-ratios","page":"EDMF equations","title":"Mixing ratios","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqMixingRatios\nr_con  = fracqt+ql1 - qt \nr_vap  = fracqt-ql    - qi1 - qt \nendalign","category":"page"},{"location":"EDMFEquations/#Potential-temperatures","page":"EDMF equations","title":"Potential temperatures","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Fix: which virtual potential temperature is used","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqTheta\nThetaDry     = TExnerD \nThetaLiqIce  = ThetaDry (1 - (RefLHv ql + RefLHs qi)(Cpm T)) \nThetaVirt    = ThetaDry (1 - r_con + 061 r_vap) \nThetaVirt    = theta left(1 + 061 qr - ql right) \nThetaRho     = T RmExnerD \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nExner functions (ExnerM).\nMixing ratios (r_con, r_vap).","category":"page"},{"location":"EDMFEquations/#Shear-production","page":"EDMF equations","title":"Shear production","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqShearProduction\nS^2 = (PD_z DMu)^2 + (PD_z DMv)^2 + (PD_z SDew)^2 \nendalign","category":"page"},{"location":"EDMFEquations/#Buoyancy","page":"EDMF equations","title":"Buoyancy","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqBuoyancy\nSDib^dagger  = grav (SDialpha - alphaRef)alphaRef \nSDib  = SDib^dagger - sum_j a_j SDjb^dagger \nalpha_i  = fracSDiRm SDiTpRef \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nPhase partition PhasePartition qt qv ql qi qvsat.\nTemperature (T and TDry).","category":"page"},{"location":"EDMFEquations/#Buoyancy-gradient","page":"EDMF equations","title":"Buoyancy gradient","text":"","category":"section"},{"location":"EDMFEquations/#(\\qt,-\\ThetaLiqIce,-\\pRef,-\\rhoRef)-formulation","page":"EDMF equations","title":"(qt ThetaLiqIce pRef rhoRef)-formulation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqBuoyancyGradLong\nSDiBuoyancyGrad  = PD_z SDiThetaLiqIce\nleft (1-f_c) PD_ThetaLiqIce b _d  + f_c PD_ThetaLiqIce b _s right +\nPD_z SDiqt      left (1-f_c) PD_qt b _d + f_c PD_qt b _s right \nf_c = 0 qquad textgood for simple cases need to confirm for more complex cases \nPD_ThetaLiqIce b _d  = fracgravDMThetaVirt left 1 + left( fracRvRd - 1 right) SDiqt right \nPD_ThetaLiqIce b _s = fracgravDMThetaVirt left 1 + fracRvRd left(1 + fracLatentHeatVSDiTRv SDiT right) SDiqvsat - SDiqt right left( 1 + fracLatentHeatVSDiT^2Cpm Rv SDiT^2 SDiqvsat right)^-1 \nPD_qt b _d = fracgravDMThetaVirt left( fracRvRd - 1 right) SDiThetaDry \nPD_qt b _s = left( fracLatentHeatVSDiTCpm SDiT PD_ThetaLiqIce b _s - fracgravDMThetaVirt right) SDiThetaDry \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nPotential temperatures (ThetaDry, ThetaVirt).\nPhase partition PhasePartition qt qv ql qi qvsat.\nLatent heat (LatentHeatVT).","category":"page"},{"location":"EDMFEquations/#(\\qt,-\\eint,-\\rhoRef{})-formulation-2","page":"EDMF equations","title":"(qt eint rhoRef)-formulation","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Pending.","category":"page"},{"location":"EDMFEquations/#Surface-fluxes","page":"EDMF equations","title":"Surface fluxes","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"todo: Todo\nAdd definitions for universal functions (e.g., Psi_m).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Variables in this section must be computed simultaneously because it requires the solution of a non-linear equation.","category":"page"},{"location":"EDMFEquations/#Monin-Obhukov-length","page":"EDMF equations","title":"Monin-Obhukov length","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"NOTE: All variables (Monin-Obhukov length, friction velocity, temperature scale) in Surface fluxes must be solved simultaneously","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqMOLen\nMOLen = begincases\n- fracFrictionVelocity^3 thetaVKConst grav SurfaceHeatFlux  SurfaceHeatFlux  0 \n0  textotherwise \nendcases \nendalign","category":"page"},{"location":"EDMFEquations/#Friction-velocity","page":"EDMF equations","title":"Friction velocity","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"NOTE: All variables (Monin-Obhukov length, friction velocity, temperature scale) in Surface fluxes must be solved simultaneously","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Knowns: u_mathrmave = sqrtDMu^2+DMv^2 LayerThickness SurfaceRoughnessm\nUnknowns: FrictionVelocity MOLen, and SurfaceMomentumFlux","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqFrictionVelocity\nu_mathrmave      = fracFrictionVelocityVKConst    left logleft(fracLayerThicknessSurfaceRoughnessmright) - Psi_mleft(fracLayerThicknessMOLenright) + fracSurfaceRoughnessmLayerThickness Psi_mleft(fracSurfaceRoughnessmMOLenright) + R_z0m left psi_mleft(fracSurfaceRoughnessmMOLenright) - 1 right right \nR_z0m               = 1 - SurfaceRoughnesshLayerThickness \nSurfaceMomentumFlux  = -FrictionVelocity^2                 labeleqSurfaceMomentumFlux  \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where Psi_m is defined in Appendix A, equations A6 in Nishizawa, S., and Y. Kitamura. \"A Surface Flux Scheme Based on the Monin‐Obukhov Similarity for Finite Volume Models.\" Journal of Advances in Modeling Earth Systems 10.12 (2018): 3159-3175.","category":"page"},{"location":"EDMFEquations/#Temperature-scale","page":"EDMF equations","title":"Temperature scale","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"NOTE: All variables (Monin-Obhukov length, friction velocity, temperature scale) in Surface fluxes must be solved simultaneously","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Knowns: theta_mathrmave theta_s LayerThickness SurfaceRoughnessh\nUnknowns: FrictionVelocity MOLen, and SurfaceHeatFlux","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqTemperatureScale\ntheta_mathrmave - theta_s  = fracPr TemperatureScaleVKConst left logleft(fracLayerThicknessSurfaceRoughnesshright) - Psi_hleft(fracLayerThicknessMOLenright) + fracSurfaceRoughnesshLayerThickness Psi_mleft(fracSurfaceRoughnesshMOLenright) + R_z0h left psi_hleft(fracSurfaceRoughnesshMOLenright) - 1 right right \nR_z0h                           = 1 - SurfaceRoughnesshLayerThickness \nSurfaceHeatFlux                  = -FrictionVelocityTemperatureScale  labeleqSurfaceHeatFlux  \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where Psi_h is defined in Appendix A, equation A6 in Nishizawa, S., and Y. Kitamura. \"A Surface Flux Scheme Based on the Monin‐Obukhov Similarity for Finite Volume Models.\" Journal of Advances in Modeling Earth Systems 10.12 (2018): 3159-3175.","category":"page"},{"location":"EDMFEquations/#Prandtl-number","page":"EDMF equations","title":"Prandtl number","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqPrandtlNumber\nPr_neut = 074 \nPr(z) = begincases\n    Pr_neut  MOLen  0 \n    Pr_neut left frac1 + omega_2 R_g - sqrt-4 R_g + (1+omega_2 R_g)^22 R_g right  textotherwise \nendcases \nomega_2 = omega_1+1 \nomega_1 = frac4013 \nR_g = fracBuoyancyGradS^2 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Shear production (S).\nMonin-Obhukov length (MOLen).\nBuoyancy gradient (BuoyancyGrad).","category":"page"},{"location":"EDMFEquations/#Mixing-length","page":"EDMF equations","title":"Mixing length","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"note: Note\nThese mixing length have been tested for the environment, not the updrafts","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqMixingLength\nSDiol_mix^m = fracsum_j l_j e^-l_jsum_j e^-l_j qquad j = 123 \nl_1 = fracsqrtc_wSDeTKESDeN \nc_w = 04 \nSDeN = fracgrav PD_z SDeThetaVirtSDeThetaVirt  qquad text(buoyancy frequency of environment) \nl_2 = fracVKConst zc_K kappa^* phi_m(zMOLen) \nphi_m(xi) = left( 1 + a_l xi right)^-b_l \n(a_l b_l) =\nbegincases\n  (-100 02)  MOLen  0 \n  (27 -1)  textotherwise \nendcases \nkappa^* = fracFrictionVelocitysqrtSDeTKE \nl_3 = sqrtfracc_varepsilonc_K sqrtSDeTKE\nleft max(S^2 - frac1Pr(z) BuoyancyGrad 0) right^-12 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Constants.\nShear production (S).\nMonin-Obhukov length (MOLen).\nFriction velocity (FrictionVelocity).\nBuoyancy gradient (BuoyancyGrad).\nPotential temperatures (ThetaDry, ThetaVirt).\nPrandtl number (Pr).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Smoothing function is provided in python file. The Prandtl number was used from Eq. 75 in Dan Li 2019 \"Turbulent Prandtl number in the atmospheric BL - where are we now\".","category":"page"},{"location":"EDMFEquations/#Eddy-diffusivity","page":"EDMF equations","title":"Eddy diffusivity","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqEddyDiffusivity\nSDiKm  = begincases\nc_K SDiol_mix sqrtSDiTKE  i = iEnv \n0  textotherwise\nendcases \nSDiKh  = fracSDiKmPr \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Constants.\nMixing length (l_mix).\nPrandtl number (Pr).","category":"page"},{"location":"EDMFEquations/#Buoyancy-flux","page":"EDMF equations","title":"Buoyancy flux","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"todo: Todo\nCurrently, BuoyancyFlux is hard-coded from the first expression (which was used in SCAMPy), however, this value should be computed from the SurfaceFluxes section.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqBuoyancyFlux\nSurfaceBuoyancyFlux  = fracgrav BCalphaRefCpm BCSDiT (SensibleSurfaceHeatFlux + (EpsDV - 1) Cpm BCSDiT LatentSurfaceHeatFlux  LatentHeatVBCSDiT) \nBuoyancyFlux  = - SDiKh SDiBuoyancyGrad \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Eddy diffusivity (Km Kh).\nLatent heat (LatentHeatVT).\nBuoyancy gradient (BuoyancyGrad).\nSpecific heats Cpm and Cvm.","category":"page"},{"location":"EDMFEquations/#Entrainment-Detrainment","page":"EDMF equations","title":"Entrainment-Detrainment","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Entrainment (epsilon_i)","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqEntrainment\nepsilon_i = c_epsilon fracmax(SDib 0)SDiw^2 \nc_epsilon = 012 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Detrainment (delta_j):","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqDetrainment\ndelta_i = c_delta fracmin(SDib 0)SDiw^2 + delta_B Heaviside(SDiql) \nc_delta = c_delta0 + Gamma(aSDia) \nGamma(aSDia) = 0 \nc_delta0 = c_epsilon = 012 \ndelta_B = 0004 m^-1 \nHeaviside = textHeaviside function \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nTemperature (T and TDry).\nBuoyancy (Buoyancy).","category":"page"},{"location":"EDMFEquations/#Inversion-height","page":"EDMF equations","title":"Inversion height","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqInversionHeight\nSDioInversionHeight =\nbegincases\n  left (PD_z ThetaRho)^-1 (BCThetaRho - ThetaRho_z_1) + z_1 right  simparamBCDMu^2 + simparamBCDMv^2 = texttol_InversionHeightmathrm-stable \n  left (PD_z Ri_bulk)^-1 (hyperparamRi_bulk crit - Ri_bulk_z_2) + z_2 right  textotherwise \nendcases \nz_1 = min_z (ThetaRho(z)  BCThetaRho) \nz_2 = min_z (Ri_bulk(z)  hyperparamRi_bulk crit) \nRi_bulk = grav z frac(ThetaRhoBCThetaRho - 1)simparamDMu^2 + simparamDMv^2 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Potential temperatures (theta).","category":"page"},{"location":"EDMFEquations/#Convective-velocity","page":"EDMF equations","title":"Convective velocity","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqConvectiveVelocity\nSDioConvectiveVelocity = (max(BuoyancyFlux SDioInversionHeight 0))^13 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Inversion height (SDioInversionHeight).\nBuoyancy flux (BuoyancyFlux).","category":"page"},{"location":"EDMFEquations/#Non-local-mixing-length","page":"EDMF equations","title":"Non-local mixing length","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalignlabeleqMixingLengthOld\nSDiol_mix = (l_A^-1 + l_B^-1)^-1 \nl_A = VKConst z left( 1 + a_l fraczMOLen right)^b_l \nSDiol_B = SDiotau SDiTKE \n(a_l b_l) =\nbegincases\n  (-100 02)  MOLen  0 \n  (27 -1)  textotherwise \nendcases \nSDiotau = SDioInversionHeightSDioConvectiveVelocity \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Inversion height (SDioInversionHeight).\nMonin-Obhukov length (MOLen).\nConvective velocity (SDioConvectiveVelocity).","category":"page"},{"location":"EDMFEquations/#Boundary-Conditions","page":"EDMF equations","title":"Boundary Conditions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Here, we specify boundary conditions (BCs) by their type, Dirichlet (D) or Neumann (N), and their value.","category":"page"},{"location":"EDMFEquations/#BC-functions","page":"EDMF equations","title":"BC functions","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nGamma_phi(F_1 F_2)\n = begincases\n    4 fracF_1 F_2FrictionVelocity^2 (1 - 83zLLMOLen)^-23  MOLen  0 \n    4 fracF_1 F_2FrictionVelocity^2  textotherwise\nendcases \nGamma_TKE\n = begincases\n    375 FrictionVelocity^2 + 02 ConvectiveVelocity^2 + FrictionVelocity^2 (-zLLMOLen)^23  MOLen  0 \n    375 FrictionVelocity^2  textotherwise\nendcases \nSensibleSurfaceHeatFlux  = BCTCVweint Cpm rhoRef \nLatentSurfaceHeatFlux    = BCTCVwqt  LatentHeatVT rhoRef \nF_eint(SensibleSurfaceHeatFlux)   = fracSensibleSurfaceHeatFluxCpm       = BCTCVweint rhoRef \nF_qt(LatentSurfaceHeatFlux)       = fracLatentSurfaceHeatFluxLatentHeatVT = BCTCVwqt   rhoRef \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Reference state profiles (pRef, rhoRef, and alphaRef).\nMonin-Obhukov length (MOLen).\nConvective velocity (SDioConvectiveVelocity).\nFriction velocity (FrictionVelocity).\nLatent heat (LatentHeatVT).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"and equation \\eqref{eq:TopPercentile} represents the mean of the top x-fraction of a standard normal distribution (Neggers et al., 2009).","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nPhi^-1(x)  = textinverse cumulative distribution function labeleqInverseCDF \nmathcal D(x) = frac1sqrt2pi x exp- frac12 (Phi^-1(1-x))^2   labeleqTopPercentile \nendalign","category":"page"},{"location":"EDMFEquations/#Area-fraction","page":"EDMF equations","title":"Area fraction","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nc_frac = 01 quad\nBCBaSDia =\nbegincases\n    1-c_frac  i = iEnv \n  fracc_fracNsd  i ne iEnv\nendcases quad\nBCTaSDia =\nbegincases\n    1-c_frac  i = iEnv \n  fracc_fracNsd  i ne iEnv\nendcases\nendalign","category":"page"},{"location":"EDMFEquations/#st-order-moments","page":"EDMF equations","title":"1st order moments","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Top boundary","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nBCTSDiw           = 0 \nPD_z BCTSDiqt   = 0 \nPD_z BCTSDieint = 0 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Bottom boundary","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"todo: Todo\nNeed value for C_eint.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nBCBSDiw     = 0 \n- SDiKh PD_z BCBSDiqt   = TCVwqt   + mathcal D(aSDia) sqrtC_qt^2   WindSpeed^2Gamma_phi(TCVwqt   TCVwqt   ) \n- SDiKh PD_z BCBSDieint = TCVweint + mathcal D(aSDia) sqrtC_eint^2 WindSpeed^2Gamma_phi(TCVweint TCVweint ) \nC_qt = 0001133 \nC_ThetaLiqIce = 0001094 \nC_eint =  \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable/function definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"BC functions mathcal D.","category":"page"},{"location":"EDMFEquations/#nd-order-moments","page":"EDMF equations","title":"2nd order moments","text":"","category":"section"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Top boundary","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nBCTSDiTKE                          = 0 \nPD_z BCTIntraCVSDiqtqt        = 0 \nPD_z BCTIntraCVSDieinteint    = 0 \nPD_z BCTIntraCVSDieintqt      = 0 \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"todo: Todo\nCurrently, we only account for the intra sub-domain covariance, but we would like to also account for the inter sub-domain covariance for all but the TKE.","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"Bottom boundary","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"beginalign\nBCBSDiTKE                    = Gamma_TKE \nBCBIntraCVSDiqtqt        = Gamma_phi(TCVwqt   TCVwqt   ) \nBCBIntraCVSDieinteint    = Gamma_phi(TCVwqt   TCVweint ) \nBCBIntraCVSDieintqt      = Gamma_phi(TCVweint TCVweint ) \nendalign","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"where additional variable/function definitions are in:","category":"page"},{"location":"EDMFEquations/","page":"EDMF equations","title":"EDMF equations","text":"BC functions Gamma_TKE, Gamma_phi, F_eint, SensibleSurfaceHeatFlux, F_qt, LatentSurfaceHeatFlux.","category":"page"},{"location":"Formulation/#TurbulenceConvection.jl-mathematical-formulation","page":"Formulation","title":"TurbulenceConvection.jl mathematical formulation","text":"","category":"section"},{"location":"Formulation/","page":"Formulation","title":"Formulation","text":"<!– TODO: Add introduction to EDMF, including figures & equations –>","category":"page"},{"location":"ReferenceStates/#Reference-States","page":"Reference states","title":"Reference States","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"Below are plots of reference profiles vs altitude for all of the vanilla experiments that are routinely run in TurbulenceConvection.jl's integration tests.","category":"page"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"include(\"PlotReferenceStates.jl\")","category":"page"},{"location":"ReferenceStates/#Bomex","page":"Reference states","title":"Bomex","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#life_cycle_Tan2018","page":"Reference states","title":"life_cycle_Tan2018","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#Soares","page":"Reference states","title":"Soares","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#Rico","page":"Reference states","title":"Rico","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#TRMM_LBA","page":"Reference states","title":"TRMM_LBA","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#ARM_SGP","page":"Reference states","title":"ARM_SGP","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#GATE_III","page":"Reference states","title":"GATE_III","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#DYCOMS_RF01","page":"Reference states","title":"DYCOMS_RF01","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#GABLS","page":"Reference states","title":"GABLS","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#SP","page":"Reference states","title":"SP","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"ReferenceStates/#DryBubble","page":"Reference states","title":"DryBubble","text":"","category":"section"},{"location":"ReferenceStates/","page":"Reference states","title":"Reference states","text":"(Image: )","category":"page"},{"location":"#TurbulenceConvection.jl","page":"Home","title":"TurbulenceConvection.jl","text":"","category":"section"},{"location":"API/#TurbulenceConvection.jl's-API","page":"API","title":"TurbulenceConvection.jl's API","text":"","category":"section"},{"location":"API/","page":"API","title":"API","text":"CurrentModule = TurbulenceConvection","category":"page"},{"location":"API/","page":"API","title":"API","text":"TurbulenceConvection.ClimaParams","category":"page"},{"location":"API/#TurbulenceConvection.ClimaParams","page":"API","title":"TurbulenceConvection.ClimaParams","text":"ClimaParams\n\nThis is a module for staging experimental clima parameters– that we are unsure will be used in the final model. Once they are no longer experimental, they should be moved to CLIMAParameters.jl.\n\nTODO: move non-experimental parameters to CLIMAParameters\n\n\n\n\n\n","category":"module"}]
}
